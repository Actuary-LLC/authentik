version: "3.9"

networks:
  authentik:
  reverse-proxy:
    external: true
    
services:    
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.8.3}
    command: server
    networks:
      authentik:
      reverse-proxy:
        aliases:
          - authentik_server
    environment:
      AUTHENTIK_COOKIE_DOMAIN: actuary.dev
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_DEBUG: true
      #CACHE
      AUTHENTIK_REDIS__HOST: unraid.lan
      #DATABASE
      AUTHENTIK_POSTGRESQL__HOST: unraid.lan
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_POSTGRESQL__USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRESQL__PASSWORD}
    deploy:
      labels:
        - "traefik.enable=true"
        ## HTTP Routers
        - "traefik.http.routers.authentik-rtr.rule=Host(`authentik.actuary.dev`)"
        - "traefik.http.routers.authentik-rtr.entrypoints=websecure"
        - "traefik.http.routers.authentik-rtr.tls=true"
        - "traefik.http.routers.authentik-rtr.tls.certresolver=myresolver"
        ## Individual Application forwardAuth regex (catch any subdomain using individual application forwardAuth)  
        - "traefik.http.routers.authentik-rtr-outpost.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.actuary.dev`) && PathPrefix(`/outpost.goauthentik.io/`)"
        #- "traefik.http.routers.authentik-rtr-outpost.entrypoints=websecure"
        #- "traefik.http.routers.authentik-rtr-outpost.tls=true"
        #- "traefik.http.routers.authentik-rtr-outpost.tls.certresolver=myresolver"
        ## HTTP Services
        - "traefik.http.routers.authentik-rtr.service=authentik-svc"
        - "traefik.http.services.authentik-svc.loadBalancer.server.port=9000"
        ## Homepage
        - homepage.group=Security
        - homepage.name=Authentik
        - homepage.icon=authentik.png
        - homepage.href=https://authentik.actuary.dev/
        - homepage.description=Authentication
        - homepage.widget.type=authentik
        - homepage.widget.url=https://authentik.actuary.dev/
        - homepage.widget.key=${HOMEPAGE_API_TOKEN}
        #- homepage.widget.fields=["users"]
        ## DIUN
        - diun.enable=true
        #Authentik Middleware
        - "traefik.http.middlewares.authentik.forwardauth.address=http://authentik_server:9000/outpost.goauthentik.io/auth/traefik"
        - "traefik.http.middlewares.authentik.forwardauth.trustforwardheader=true"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-username"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-groups"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-email"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-name"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-uid"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-jwt"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-meta-jwks"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-meta-outpost"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-meta-provider"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-meta-app"
        - "traefik.http.middlewares.authentik.forwardauth.authresponseheaders=X-authentik-meta-version"
      
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.8.3}
    command: worker
    networks:
      - authentik
    environment:
      AUTHENTIK_COOKIE_DOMAIN: actuary.dev
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      #CACHE
      AUTHENTIK_REDIS__HOST: unraid.lan
      #DATABASE
      AUTHENTIK_POSTGRESQL__HOST: unraid.lan
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_POSTGRESQL__USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRESQL__PASSWORD}
